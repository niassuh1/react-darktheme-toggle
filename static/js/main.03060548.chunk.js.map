{"version":3,"sources":["Theme.js","components/Header.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","savedTheme","localStorage","getItem","JSON","parse","getTheme","darkTheme","setDarkTheme","useEffect","setItem","themeValues","toggleTheme","Provider","value","Header","props","ThemeCont","React","useContext","dark","toggle","className","checked","onClick","icons","size","unchecked","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEaA,EAAeC,0BAErB,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAAY,EACRC,mBAQlC,WACE,IAAMC,EAAaC,aAAaC,QAAQ,aACxC,QAAOF,GAAaG,KAAKC,MAAMJ,GAVUK,IADD,mBACnCC,EADmC,KACxBC,EADwB,KAe1CC,qBAAU,WACRP,aAAaC,QAAQ,aACjBD,aAAaC,QAAQ,aACrBD,aAAaQ,QAAQ,YAAaH,KACrC,IAGH,IAAMI,EAAc,CAAEJ,YAAWK,YAnBjC,WACEJ,GAAcD,GACdL,aAAaQ,QAAQ,aAAcH,KAkBrC,OACE,mCACE,cAACX,EAAaiB,SAAd,CAAuBC,MAAOH,EAA9B,SACGZ,MCJMgB,MApBf,SAAgBC,GACd,IAAMC,EAAYC,IAAMC,WAAWvB,GAC7BwB,EAAOH,EAAUV,UACjBc,EAASJ,EAAUL,YAEzB,OACE,qBAAKU,UAAWF,EAAO,cAAgB,SAAvC,SACE,cAAC,IAAD,CACAG,QAAWH,EACTI,QAAWH,EACXC,UAAU,SACVG,MAAO,CACLF,QAAS,cAAC,IAAD,CAAQG,KAAK,SACtBC,UAAW,cAAC,IAAD,CAAOD,KAAK,OAAOE,MAAM,gB,MCA/BC,MAbf,WACE,IACMT,EADYF,IAAMC,WAAWvB,GACZW,UACvB,OACE,qCACA,cAAC,EAAD,IACA,qBAAKe,UAAYF,EAAO,eAAiB,gBCN7CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,UACE,cAAC,EAAD,QAGJmC,SAASC,eAAe,W","file":"static/js/main.03060548.chunk.js","sourcesContent":["import React, { useState, useContext, createContext, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [darkTheme, setDarkTheme] = useState(getTheme());\r\n\r\n  function toggleTheme() {\r\n    setDarkTheme(!darkTheme);\r\n    localStorage.setItem(\"darkTheme\", !darkTheme);\r\n  }\r\n\r\n  //Initialize the value\r\n  function getTheme() {\r\n    const savedTheme = localStorage.getItem(\"darkTheme\");\r\n    return savedTheme ? JSON.parse(savedTheme) : false;\r\n  }\r\n  \r\n  //Initialize in the user's local storage\r\n  useEffect(() => {\r\n    localStorage.getItem(\"darkTheme\")\r\n      ? localStorage.getItem(\"darkTheme\")\r\n      : localStorage.setItem(\"darkTheme\", darkTheme);\r\n  }, []);\r\n\r\n  //Extract the values\r\n  const themeValues = { darkTheme, toggleTheme };\r\n  return (\r\n    <>\r\n      <ThemeContext.Provider value={themeValues}>\r\n        {children}\r\n      </ThemeContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"react-toggle/style.css\";\r\nimport Toggle from \"react-toggle\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\nimport { ThemeContext } from '../Theme'\r\n\r\nfunction Header(props) {\r\n  const ThemeCont = React.useContext(ThemeContext)\r\n  const dark = ThemeCont.darkTheme\r\n  const toggle = ThemeCont.toggleTheme\r\n\r\n  return (\r\n    <div className={dark ? \"header dark\" : \"header\" }>\r\n      <Toggle\r\n      checked = {dark}\r\n        onClick = {toggle}\r\n        className=\"toggle\"\r\n        icons={{\r\n          checked: <FaMoon size=\"10px\" />,\r\n          unchecked: <FaSun size=\"10px\" color=\"white\" />,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport './style/main.css';\nimport { ThemeContext } from './Theme'\n\n\nfunction App() {\n  const ThemeCont = React.useContext(ThemeContext)\n  const dark = ThemeCont.darkTheme\n  return (\n    <>\n    <Header/>\n    <div className= {dark ? \"content dark\" : \"content\"}>\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ThemeProvider} from './Theme'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}